from entities.music import Music
from entities.DTO import MusicStats

from typing import AsyncIterator, Protocol


class IMusicFileRepository(Protocol):
    async def save_music(
        self, object_name: str, file_data: bytes, content_type: str
    ) -> None: ...

    async def save_cover(
        self, object_name: str, file_data: bytes, content_type: str
    ) -> None: ...

    async def stream_music(
        self, music_name: str, start: int, end: int
    ) -> AsyncIterator[bytes]: ...

    async def get_music_stats(self, music_name: str) -> MusicStats: ...
    async def delete_file(self, object_name: str) -> None: ...


class IMusicMetadataRepository(Protocol):
    async def add(self, music: Music) -> None: ...
    async def get(self, name: str) -> Music | None: ...
    async def update(self, name: str, music: Music) -> None: ...
    async def delete(self, name: str) -> None: ...
